@using Microsoft.AspNetCore.Mvc.Localization

@model UI.Models.Definition.Definition
@inject IViewLocalizer Localizer
@inject UI.Utils.LocalizationService SharedLocaLizer


@using (Html.BeginForm("DetailReadOnly", "Definition", FormMethod.Post, new { id = "formDetail" }))
{
    @Html.HiddenFor(x => x.EntityId)

    <div class="row">
        <div class="col-md-12" style="margin-top:20px;">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["DefinitionTitle"]
                        <select id="definitionTitle" class="form-control" disabled="disabled">
                            <option></option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["Category"]
                        <select id="category" class="form-control" disabled="disabled">
                            <option></option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["ProductGroup"]
                        <select id="productGroup" class="form-control" disabled="disabled">
                            <option></option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="checkbox-custom checkbox-inline checkbox-success" style="margin-bottom:5px">
                            @Html.CheckBoxFor(x => x.Status, new { @id = "CheckBoxActive", @class = "chb" ,@disabled = "disabled" })
                            @Html.LabelFor(x => x.Status, "") @Localizer["IsActive"]
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="checkbox-custom checkbox-inline checkbox-success" style="margin-bottom:5px">
                            @Html.CheckBoxFor(x => x.IsDefault, new { @id = "CheckBoxIsDefault", @class = "chb", @disabled = "disabled" })
                            @Html.LabelFor(x => x.IsDefault, "") @Localizer["IsDefault"]
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Localizer["Kdv"]
                        @Html.TextBoxFor(x => x.Kdv, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Localizer["Code"]
                        @Html.TextBoxFor(x => x.Code, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["ShortDescription"]
                        @Html.TextBoxFor(x => x.ShortDescription, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["DescriptionTr"]
                        @Html.TextBoxFor(x => x.DescriptionTr, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Localizer["DescriptionEn"]
                        @Html.TextBoxFor(x => x.DescriptionEn, new { @class = "form-control", @disabled = "disabled" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-2" style="float:right">
                <button class="btn btn-success" onclick="location.href = '@Url.Action("Detail", "Definition",new {id=Model.EntityId })'" data-dismiss="modal" type="button">@Localizer["Edit"]</button>

            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $('.form-group').css('pointer-events', 'none');
</script>

<script>

     $(document).ready(function () {

        var comboDefinitionTitleUrl = "@Url.Action("ComboList", "DefinitionTitle")" + "?DefinitionTitleId=" + DefinitionTitleId;

        $.ajax({
            url: comboDefinitionTitleUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                $("#definitionTitle").select2({
                    dataType: 'json',
                    data: data,
                    minimumInputLength: 0,
                    placeholder: '@Localizer["SelectDefinitionTitle"]',
                    sorter: function (data) {
                        return data.sort(function (a, b) {
                            return a.text < b.text ? -1 : a.text > b.text ? 1 : 0;
                        });
                    }
                });
                $('#definitionTitle').val($('#DefinitionTitleId').val()).trigger("change");

            }
        }, 'json');

        $('#definitionTitle').on('select2:select', function (evt) {
            $('#DefinitionTitleId').val(this.value);
        });


        var comboCategoryUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 4;

        $.ajax({
            url: comboCategoryUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                $("#category").select2({
                    dataType: 'json',
                    data: data,
                    minimumInputLength: 0,
                    placeholder: '@Localizer["SelectCategory"]',
                    sorter: function (data) {
                        return data.sort(function (a, b) {
                            return a.text < b.text ? -1 : a.text > b.text ? 1 : 0;
                        });
                    }
                });
                $('#category').val($('#CategoryId').val()).trigger("change");

            }
        }, 'json');

        $('#category').on('select2:select', function (evt) {
            $('#CategoryId').val(this.value);
        });

        var comboProductGroupUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 10;

        $.ajax({
            url: comboProductGroupUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                $("#productGroup").select2({
                    dataType: 'json',
                    data: data,
                    minimumInputLength: 0,
                    placeholder: '@Localizer["SelectProductGroup"]',
                    sorter: function (data) {
                        return data.sort(function (a, b) {
                            return a.text < b.text ? -1 : a.text > b.text ? 1 : 0;
                        });
                    }
                });
                $('#productGroup').val($('#ProductGroupId').val()).trigger("change");

            }
        }, 'json');

        $('#productGroup').on('select2:select', function (evt) {
            $('#ProductGroupId').val(this.value);
        });

    });

</script>