@using Microsoft.AspNetCore.Mvc.Localization

@model UI.Models.Season.Season
@inject IViewLocalizer Localizer
@inject UI.Utils.LocalizationService SharedLocaLizer

@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link href="~/css/customerDetail.css" rel="stylesheet" />
<link href="~/js/panel-structure.js" rel="stylesheet" />
<link href="~/css/AccordionTables.css" rel="stylesheet" />

@using (Html.BeginForm("Detail", "Season", FormMethod.Post, new { id = "formDetail" }))
{
    @Html.HiddenFor(x => x.EntityId)
    @Html.HiddenFor(x => x.CustomerId)
    @Html.HiddenFor(x => x.ModelSeasonRowNumberProductGroupId)
    @Html.HiddenFor(x => x.ModelSeasonRowNumberMaxNumber)
    @Html.HiddenFor(x => x.SubSeasonPlanningString)
    @Html.HiddenFor(x => x.SubSeasonCurrencyString)
    @Html.HiddenFor(x => x.SubPaymentMethodShareString)
    @Html.HiddenFor(x => x.SubCountryShippingMultiplierString)
    @Html.HiddenFor(x => x.SubModelSeasonRowNumberString)

    <div class="page-header page-header-bordered">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/@Model.Culture/Home/Index">@Localizer["Home"]</a></li>
            <li class="breadcrumb-item"><a href="/@Model.Culture/Season/Index">@Localizer["List"]</a></li>

            @if (Model.EntityId == 0)
            {
                <li class="breadcrumb-item active">@Localizer["NewSeason"]</li>
            }
            else
            {
                <li class="breadcrumb-item active">@Model.Code @Model.Description </li>
            }
        </ol>
    </div>
    <div class="page-content">
        <div class="panel">
            <header class="panel-heading">
                <div class="panel-actions"></div>
                <h3 class="panel-title">@Localizer["PageTitle"]</h3>
            </header>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">
                        <div class="box box-info">
                            <div class="box-body">
                                <div class="row">
                                    <!-- Example Tabs Line Top -->
                                    <div class="example-wrap col-md-12">
                                        <div class="nav-tabs-horizontal" data-plugin="tabs">
                                            <ul class="nav nav-tabs nav-tabs-line tabs-line-top" role="tablist">
                                                <li class="nav-item" role="presentation">
                                                    <a class="nav-link active" data-toggle="tab" href="#general"
                                                       aria-controls="general" role="tab">@Localizer["General"]</a>
                                                </li>
                                                <li class="nav-item" role="presentation">
                                                    <a class="nav-link" data-toggle="tab" href="#modelSeasonRowNumber"
                                                       aria-controls="modelSeasonRowNumber" role="tab">@Localizer["ModelSeasonRowNumber"]</a>
                                                </li>
                                            </ul>
                                            <div class="tab-content pt-20">
                                                <div class="tab-pane active" id="general" role="tabpanel">
                                                    <div class="row">
                                                        <div class="col-md-2">
                                                            <div class="form-group">
                                                                <div class="checkbox-custom checkbox-inline checkbox-success" style="margin-top: 25px">
                                                                    @Html.CheckBoxFor(x => x.IsActive, new { @id = "isActive" })
                                                                    @Html.LabelFor(x => x.IsActive, "")@Localizer["IsActive"]
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <div class="form-group">
                                                                @Localizer["Code"]
                                                                @Html.TextBoxFor(x => x.Code, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <div class="form-group">
                                                                @Localizer["Description"]
                                                                @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <!-- Example Tabs Line Top -->
                                                        <div class="example-wrap col-md-12">
                                                            <div class="nav-tabs-horizontal" data-plugin="tabs">
                                                                <ul class="nav nav-tabs nav-tabs-line tabs-line-top" role="tablist">
                                                                    <li class="nav-item" role="presentation">
                                                                        <a class="nav-link active" data-toggle="tab" href="#seasonPlanning"
                                                                           aria-controls="seasonPlanning" role="tab">@Localizer["SeasonPlanning"]</a>
                                                                    </li>
                                                                    <li class="nav-item" role="presentation">
                                                                        <a class="nav-link" data-toggle="tab" href="#seasonCurrency"
                                                                           aria-controls="seasonCurrency" role="tab">@Localizer["SeasonCurrency"]</a>
                                                                    </li>
                                                                    <li class="nav-item" role="presentation">
                                                                        <a class="nav-link" data-toggle="tab" href="#paymentMethodShare"
                                                                           aria-controls="paymentMethodShare" role="tab">@Localizer["PaymentMethodShare"]</a>
                                                                    </li>
                                                                    <li class="nav-item" role="presentation">
                                                                        <a class="nav-link" data-toggle="tab" href="#countryShippingMultiplier"
                                                                           aria-controls="countryShippingMultiplier" role="tab">@Localizer["CountryShippingMultiplier"]</a>
                                                                    </li>
                                                                </ul>
                                                                <div class="tab-content pt-20">
                                                                    <div class="tab-pane active" id="seasonPlanning" role="tabpanel">
                                                                        @Html.HiddenFor(x => x.SubSeasonPlanningString)
                                                                        <div class="col-md-12">
                                                                            <div class="panel panel-primary panel-line">

                                                                                <div class="col-md-12">
                                                                                    <div class="row">
                                                                                        <h4 class="col mb-0 align-self-end">@Localizer["SeasonPlanning"]</h4>
                                                                                        <div class="col-md-auto text-right mt-2">
                                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddSeasonPlanning()">@Localizer["NewSeasonPlanning"]</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <table id="seasonPlanningGrid" class="fold-table table-bordered table-hover table table-striped">
                                                                                    <thead class="col-md-12">
                                                                                        <tr>
                                                                                            <th>@Localizer["ProductGroup"]</th>
                                                                                            <th>@Localizer["PlanUnitQuantity"]</th>
                                                                                            <th>@Localizer["PlanTotalQuantity"]</th>
                                                                                            <th>@Localizer["RealTotalQuantity"]</th>
                                                                                            <th></th>
                                                                                        </tr>
                                                                                    </thead>


                                                                                    @for (int i = 0; i < Model.ListSeasonPlannings.Count; i++)
                                                                                    {
                                                                                        <tbody class="col-md-12">
                                                                                            <tr class="view" id="view'@i'" value="@i">
                                                                                                <td>@Html.HiddenFor(x => x.ListSeasonPlannings[i].ProductGroupId, new { @class = "form-control", @style = "background-color:#fff" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanUnitQuantity, new { @disabled = "disabled", @class = "form-control", @style = "background-color:#fff" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanTotalQuantity, new { @disabled = "disabled", @class = "form-control", @style = "background-color:#fff" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealTotalQuantity, new { @disabled = "disabled", @class = "form-control", @style = "background-color:#fff" })</td>
                                                                                                <td>
                                                                                                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteListLine(@i)">@Localizer["Delete"]</button>
                                                                                                </td>
                                                                                            </tr>
                                                                                            <tr class="fold" id="fold'@i'">
                                                                                                <td colspan="7">
                                                                                                    <div class="fold-content">
                                                                                                        <table id="tableSeasonPlanning">
                                                                                                            <thead>
                                                                                                                <tr>
                                                                                                                    <th width="25%">@Localizer["ProductGroup"]</th>
                                                                                                                    <th width="25%">@Localizer["PlanUnitQuantity"]</th>
                                                                                                                    <th width="25%">@Localizer["PlanTotalQuantity"]</th>
                                                                                                                    <th width="25%">@Localizer["RealTotalQuantity"]</th>

                                                                                                                </tr>
                                                                                                            </thead>
                                                                                                            <tbody>
                                                                                                                <tr id="trProductGroup">
                                                                                                                    <td id="productGroup'@i'">@Html.HiddenFor(x => x.ListSeasonPlannings[i].ProductGroupId, new { @class = "form-control" })</td>
                                                                                                                    <td id="planUnitQuantity'@i'">@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanUnitQuantity, new { @class = "form-control", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td id="planTotalQuantity'@i'">@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanTotalQuantity, new { @disabled = "disabled", @class = "form-control" })</td>
                                                                                                                    <td id="realTotalQuantity'@i'">@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealTotalQuantity, new { @disabled = "disabled", @class = "form-control" })</td>
                                                                                                                </tr>
                                                                                                                <tr>
                                                                                                                    <th width="100%"><strong>@Localizer["Planned"]</strong></th>
                                                                                                                </tr>
                                                                                                                <tr>
                                                                                                                    <th width="12%">@Localizer["ModelMain"]</th>
                                                                                                                    <th width="11%">@Localizer["ModelMini"]</th>
                                                                                                                    <th width="11%">@Localizer["ModelMidi"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMain"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMini"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMidi"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMain"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMini"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMidi"]</th>
                                                                                                                </tr>
                                                                                                                <tr id="trPlanLine">
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanModelMain, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanModelMini, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanModelMidi, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanOptionMain, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanOptionMini, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(  " + i + " );" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanOptionMidi, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanQuantityMain, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanQuantityMini, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].PlanQuantityMidi, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                </tr>
                                                                                                                <tr>
                                                                                                                    <th width="100%"><strong>@Localizer["Performed"]</strong></th>
                                                                                                                </tr>
                                                                                                                <tr>
                                                                                                                    <th width="12%">@Localizer["ModelMain"]</th>
                                                                                                                    <th width="11%">@Localizer["ModelMini"]</th>
                                                                                                                    <th width="11%">@Localizer["ModelMidi"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMain"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMini"]</th>
                                                                                                                    <th width="11%">@Localizer["OptionMidi"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMain"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMini"]</th>
                                                                                                                    <th width="11%">@Localizer["QuantityMidi"]</th>
                                                                                                                </tr>
                                                                                                                <tr id="trRealLine">
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealModelMain, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealModelMini, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealModelMidi, new { @class = "form-control numericField" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealOptionMain, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealOptionMini, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealOptionMidi, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealQuantityMain, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealQuantityMini, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                    <td>@Html.TextBoxFor(x => x.ListSeasonPlannings[i].RealQuantityMidi, new { @class = "form-control numericField", onkeyup = "SeasonPlanningTotalCalc(" + i + ");" })</td>
                                                                                                                </tr>
                                                                                                            </tbody>
                                                                                                        </table>
                                                                                                    </div>
                                                                                                </td>
                                                                                            </tr>
                                                                                        </tbody>
                                                                                    }
                                                                                </table>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="tab-pane" id="seasonCurrency" role="tabpanel">
                                                                        @Html.HiddenFor(x => x.SubSeasonCurrencyString)
                                                                        <div class="col-md-12">
                                                                            <div class="panel panel-primary panel-line">
                                                                                <div class="col-md-12">
                                                                                    <div class="row">
                                                                                        <h4 class="col mb-0 align-self-end">@Localizer["SeasonCurrency"]</h4>
                                                                                        <div class="col-md-auto text-right mt-2">
                                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddSeasonCurrency()">@Localizer["NewSeasonCurrency"]</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <table id="seasonCurrencyGrid" class="table table-striped table-bordered table-hover table-responsive" style="display: table !important">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            <th width="10%">@Localizer["IsDefault"]</th>
                                                                                            <th width="30%">@Localizer["CurrencyType"]</th>
                                                                                            <th width="40%">@Localizer["ExchangeRate"]</th>
                                                                                            <th width="10%"></th>
                                                                                            <th width="10%"></th>
                                                                                        </tr>
                                                                                    </thead>

                                                                                    @for (int i = 0; i < Model.ListSeasonCurrencies.Count; i++)
                                                                                    {
                                                                                        <tbody>
                                                                                            <tr id="trSeasonCurrency">
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <div class="checkbox-custom checkbox-inline checkbox-success" style="padding-top:5px">
                                                                                                            @Html.CheckBoxFor(x => x.ListSeasonCurrencies[i].IsDefault, new { @class = "isDefaultCheck", @style = "" })
                                                                                                            @Html.LabelFor(x => x.ListSeasonCurrencies[i].IsDefault, "")
                                                                                                        </div>
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control" name="currencyType" id="currencyType" value="@Model.ListSeasonCurrencies[i].CurrencyType" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="exchangeRate" id="exchangeRate" value="@Model.ListSeasonCurrencies[i].ExchangeRate" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td><button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteSeasonCurrency(this)">@Localizer["Delete"]</button> @Html.HiddenFor(x => x.ListSeasonCurrencies[i].Id)</td>
                                                                                            </tr>
                                                                                        </tbody>
                                                                                    }

                                                                                </table>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="tab-pane" id="paymentMethodShare" role="tabpanel">
                                                                        @Html.HiddenFor(x => x.SubPaymentMethodShareString)
                                                                        <div class="col-md-12">
                                                                            <div class="panel panel-primary panel-line">
                                                                                <div class="col-md-12">
                                                                                    <div class="row">
                                                                                        <h4 class="col mb-0 align-self-end">@Localizer["PaymentMethodShare"]</h4>
                                                                                        <div class="col-md-auto text-right mt-2">
                                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddPaymentMethodShare()">@Localizer["NewPaymentMethodShare"]</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <table id="paymentMethodGrid" class="table table-striped table-bordered table-hover table-responsive" style="display: table !important">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            <th width="20%">@Localizer["PaymentMethod"]</th>
                                                                                            <th width="10%">@Localizer["CenterShare"]</th>
                                                                                            <th width="10%">@Localizer["SeasonCurrency"]</th>
                                                                                            <th width="10%">@Localizer["ExchangeRates"]</th>
                                                                                            <th width="10%">@Localizer["CenterShareTl"]</th>
                                                                                            <th width="10%">@Localizer["CenterShareEuro"]</th>
                                                                                            <th width="10%">@Localizer["AccessoryCenterShareEuro"]</th>
                                                                                            <th width="10%"></th>
                                                                                            <th width="10%"></th>
                                                                                        </tr>
                                                                                    </thead>

                                                                                    @for (int i = 0; i < Model.ListPaymentMethodShares.Count; i++)
                                                                                    {
                                                                                        <tbody>
                                                                                            <tr id="trPaymentMethod">
                                                                                                <td id="paymentMethod'@i'">@Html.HiddenFor(x => x.ListPaymentMethodShares[i].PaymentMethodId, new { @class = "form-control" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListPaymentMethodShares[i].CenterShare, new { @class = "form-control numericField", onchange = "PaymentMethodCurrencyCalc(" + @i + ");", id = "centerShare'" + @i + "'" })</td>
                                                                                                <td id="seasonCurrency'@i'">@Html.HiddenFor(x => x.ListPaymentMethodShares[i].SeasonCurrencyId, new { @class = "form-control", onchange = "PaymentMethodCurrencyCalc(" + @i + ");" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListPaymentMethodShares[i].ExchangeRates, new { @class = "form-control numericField", disabled = "disabled", name = "exchangeRates", id = "exchangeRates'" + @i + "'" })</td>
                                                                                                <td>@Html.TextBoxFor(x => x.ListPaymentMethodShares[i].CenterShareTl, new { @class = "form-control numericField", disabled = "disabled", name = "centerShareTl", id = "centerShareTl'" + @i + "'" })</td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="centerShareEuro" id="centerShareEuro" value="@Model.ListPaymentMethodShares[i].CenterShareEuro" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="accessoryCenterShareEuro" id="accessoryCenterShareEuro" value="@Model.ListPaymentMethodShares[i].AccessoryCenterShareEuro" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td><button type="button" class="btn btn-sm btn-outline-danger" onclick="deletePaymentMethodShare(this)">@Localizer["Delete"]</button> @Html.HiddenFor(x => x.ListPaymentMethodShares[i].Id)</td>
                                                                                            </tr>
                                                                                        </tbody>
                                                                                    }

                                                                                </table>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="tab-pane" id="countryShippingMultiplier" role="tabpanel">
                                                                        @Html.HiddenFor(x => x.SubCountryShippingMultiplierString)
                                                                        <div class="col-md-12">
                                                                            <div class="panel panel-primary panel-line">
                                                                                <div class="col-md-12">
                                                                                    <div class="row">
                                                                                        <h4 class="col mb-0 align-self-end">@Localizer["CountryShippingMultiplier"]</h4>
                                                                                        <div class="col-md-auto text-right mt-2">
                                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddCountryShippingMultiplier()">@Localizer["NewCountryShippingMultiplier"]</button>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <table id="countryShippingMultiplierGrid" class="table table-striped table-bordered table-hover table-responsive" style="display: table !important">
                                                                                    <thead>
                                                                                        <tr>
                                                                                            <th width="10%">@Localizer["Country"]</th>
                                                                                            <th width="10%">@Localizer["ShippingMethod"]</th>
                                                                                            <th width="8%">@Localizer["Multiplier"]</th>
                                                                                            <th width="8%">@Localizer["TestPrice"]</th>
                                                                                            <th width="8%">@Localizer["Currency"]</th>
                                                                                            <th width="8%">@Localizer["ExchangeRates"]</th>
                                                                                            <th width="8%">@Localizer["TestPriceTl"]</th>
                                                                                            <th width="8%">@Localizer["Test%"]</th>
                                                                                            <th width="8%">@Localizer["Cargo%"]</th>
                                                                                            <th width="8%">@Localizer["Insurance%"]</th>
                                                                                            <th width="8%">@Localizer["Freight%"]</th>
                                                                                            <th width="8%"></th>

                                                                                        </tr>
                                                                                    </thead>
                                                                                    <tbody>
                                                                                        @for (int i = 0; i < Model.ListCountryShippingMultipliers.Count; i++)
                                                                                        {
                                                                                            <tr id="dataSatir">
                                                                                                <td id="country'@i'">@Html.HiddenFor(x => x.ListCountryShippingMultipliers[i].CountryId, new { @class = "form-control" })</td>
                                                                                                <td id="shippingMethod'@i'">@Html.HiddenFor(x => x.ListCountryShippingMultipliers[i].ShippingMethodId, new { @class = "form-control" })</td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="multiplier" id="multiplier" value="@Model.ListCountryShippingMultipliers[i].Multiplier" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="testPrice" id="countryTestPrice'@i'" value="@Model.ListCountryShippingMultipliers[i].TestPrice" , onchange="CountryShippingMultiplierCurrencyCalc(@i);" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td id="countrySeasonCurrency'@i'">@Html.HiddenFor(x => x.ListCountryShippingMultipliers[i].SeasonCurrencyId, new { @class = "form-control", onchange = "CountryShippingMultiplierCurrencyCalc(" + @i + ");" })</td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="exchangeRates" id="countryExchangeRates'@i'" disabled="disabled" value="@Model.ListCountryShippingMultipliers[i].ExchangeRates" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="testPriceTl" id="countryTestPriceTl'@i'" disabled="disabled" value="@Model.ListCountryShippingMultipliers[i].TestPriceTl" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="testPercentage" id="testPercentage" value="@Model.ListCountryShippingMultipliers[i].TestPercentage" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="cargoPercentage" id="cargoPercentage" value="@Model.ListCountryShippingMultipliers[i].CargoPercentage" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="insurancePercentage" id="insurancePercentage" value="@Model.ListCountryShippingMultipliers[i].InsurancePercentage" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td>
                                                                                                    <div class="input-group">
                                                                                                        <input type="text" class="form-control numericField" name="freightPercentage" id="freightPercentage" value="@Model.ListCountryShippingMultipliers[i].FreightPercentage" />
                                                                                                    </div>
                                                                                                </td>
                                                                                                <td><button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteCountryShippingMultiplier(this)">@Localizer["Delete"]</button> @Html.HiddenFor(x => x.ListCountryShippingMultipliers[i].Id)</td>
                                                                                            </tr>
                                                                                        }
                                                                                    </tbody>
                                                                                </table>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="tab-pane" id="modelSeasonRowNumber" role="tabpanel">
                                                    @Html.HiddenFor(x => x.SubModelSeasonRowNumberString)
                                                    <div class="col-md-12">
                                                        <div class="panel panel-primary panel-line">
                                                            <div class="col-md-12">
                                                                <div class="row">
                                                                    <div class="col-3">
                                                                        <div class="form-group">
                                                                            @Localizer["ProductGroup"]
                                                                            <select id="modelProductGroupId" class="form-control">
                                                                                <option></option>
                                                                            </select>
                                                                            @*@Html.HiddenFor(x => x.ModelSeasonRowNumberProductGroupId, new {@class = "form-control", @id = "modelProductGroupId"})*@
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-3">
                                                                        <div class="form-group">
                                                                            @Localizer["MaxRowNumber"]
                                                                            @Html.TextBoxFor(x => x.ModelSeasonRowNumberMaxNumber, new { @class = "form-control", @id = "modelRowNumber" })
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-3">
                                                                        <div class="col-md-auto text-right mt-2">
                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddModelSeasonRowNumbersByProductGroupId();">@Localizer["NewByProductGroup"]</button>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-3">
                                                                        <div class="col-md-auto text-right mt-2">
                                                                            <button type="button" class="col btn btn-sm btn-outline-success px-4" onclick="AddModelSeasonRowNumbersAllProductGroup();">@Localizer["NewAllProductGroup"]</button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <table id="modelSeasonRowNumbersGrid" class="table table-striped table-bordered table-hover table-responsive" style="display: table !important">
                                                                <thead>
                                                                    <tr>
                                                                        <th width="10%">@Localizer["IsActive"]</th>
                                                                        <th width="30%">@Localizer["ProductGroupId"]</th>
                                                                        <th width="40%">@Localizer["RowNumber"]</th>
                                                                        <th width="10%"></th>
                                                                        <th width="10%"></th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @for (int i = 0; i < Model.ListModelSeasonRowNumbers.Count; i++)
                                                                    {
                                                                        <tr class="trModelSeasonRowNumbers">
                                                                            <td>
                                                                                <div class="input-group">
                                                                                    <div class="checkbox-custom checkbox-inline checkbox-success" style="padding-top:5px">
                                                                                        @Html.CheckBoxFor(x => x.ListModelSeasonRowNumbers[i].IsActive, new { @class = "isActiveCheck" })
                                                                                        @Html.LabelFor(x => x.ListModelSeasonRowNumbers[i].IsActive, "")
                                                                                    </div>
                                                                                </div>
                                                                            </td>
                                                                            <td id="modelRowProductGroup'@i'">@Html.HiddenFor(x => x.ListModelSeasonRowNumbers[i].ProductGroupId, new { @class = "form-control", disabled = "disabled" })</td>
                                                                            <td id="modelRowNumber'@i'">@Html.TextBoxFor(x => x.ListModelSeasonRowNumbers[i].RowNumber, new { @class = "form-control", disabled = "disabled", type = "number" })</td>
                                                                            <td><button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteModelSeasonRowNumbers(this)">@Localizer["Delete"]</button> @Html.HiddenFor(x => x.ListModelSeasonRowNumbers[i].Id)</td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="col-md-2" style="float:right">
                            <button type="button" class="btn btn-block btn-success" id="buttonSave" onclick="Save();">@Localizer["Save"]</button>
                        </div>
                        <div class="col-md-2" style="float:right">
                            <button type="button" class="btn btn-block btn-danger" onclick="window.location.href='Index'">@Localizer["Cancel"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
    var dataListProductGroup = [];
    var dataListPaymentMethod = [];
    var dataListShippingMethod = [];
    var dataListCountry = [];
    var dataListSeasonCurrency = [];
    var count = 0;
    var countPaymentMethod = 0;
    var countCountryShippingMultiplier = 0;
    var countSeasonCurrency = 0;

    $(document).ready(function() {

        dataListProductGroup = [];
        dataListPaymentMethod = [];
        dataListSeasonCurrency = [];
        dataListShippingMethod = [];
        dataListCountry = [];

        $("#tableSeasonPlanning tbody").each(function() {
            var row = $(this);

            var data = {};

            data.productGroupId = row.find("#trProductGroup").find("td").find("input").eq(0).val();
            if (data.productGroupId>0) {
                ComboProductGroupList(data.productGroupId, count);
                ComboTopProductGroupList(data.productGroupId, count);
            }


            count++;
        });

        $("#paymentMethodGrid tbody").each(function() {
            var row = $(this);

            var data = {};

            data.paymentMethodId = row.find("#dataSatir").find("td").find("input").eq(0).val();
            data.seasonCurrencyId = row.find("#dataSatir").find("td").find("input").eq(2).val();
            if (data.paymentMethodId > 0) {
                ComboPaymentMethodList(data.paymentMethodId, countPaymentMethod);
            }

            if (data.seasonCurrencyId > 0) {
                ComboPaymentMethodSeasonCurrencyList(data.seasonCurrencyId, countPaymentMethod);
            }


            countPaymentMethod++;
        });

        $("#countryShippingMultiplierGrid tbody").each(function() {
            var row = $(this);

            var data = {};
            data.countryId = row.find("#dataSatir").find("td").find("input").eq(0).val();
            data.shippingMethodId = row.find("#dataSatir").find("td").find("input").eq(1).val();
            data.seasonCurrencyId = row.find("#dataSatir").find("td").find("input").eq(2).val();

            if (data.countryId>0) {
                ComboCountryList(data.countryId, countCountryShippingMultiplier);
            }
            if (data.shippingMethodId > 0) {
                ComboShippingMethodList(data.shippingMethodId, countCountryShippingMultiplier);
            }
            if (data.seasonCurrencyId > 0) {
                ComboCountryShippingMultiplierCurrencyList(data.seasonCurrencyId, countCountryShippingMultiplier);
            }

            countCountryShippingMultiplier++;
        });


        ComboModelProductGroupList();
    });


    function ComboProductGroupList(productGroupId, count) {
        dataListProductGroup = [];

        document.getElementById("productGroup'" + count + "'").innerHTML = "<select id=\"comboProductGroup" + count + "\" class=\"form-control productGroup comboProductGroup\" onchange =\"SeasonPlanningTotalCalc(" + count + ");\">" + "</select>";
        var selectitem = document.getElementById("comboProductGroup" + count);

        var comboProductGroupUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 10;

        $.ajax({
            url: comboProductGroupUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function(data) {
                data.forEach(element => {
                    dataListProductGroup.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectitem.appendChild(option);
                    });
            }
        });


        if (productGroupId > 0) {
            selectitem.value = productGroupId;
        }
    }

    function ComboTopProductGroupList(productGroupId, count) {
        dataListProductGroup = [];

        document.getElementById("topProductGroup'" + count + "'").innerHTML = "<select id=\"comboTopProductGroup" + count + "\" class=\"form-control productGroup comboTopProductGroup\" disabled=\"disabled\">" + "</select>";
        var selectitem = document.getElementById("comboTopProductGroup" + count);

        var comboProductGroupUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 10;

        $.ajax({
            url: comboProductGroupUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function(data) {
                data.forEach(element => {
                    dataListProductGroup.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectitem.appendChild(option);
                    });
            }
        });
        if (productGroupId > 0) {
            selectitem.value = productGroupId;
            }

    }

    function ComboModelProductGroupList() {
        dataListProductGroup = [];

        //document.getElementById("modelProductGroupId").innerHTML = "<select id=\"comboModelProductGroup\" class=\"form-control productGroup comboModelProductGroup\">" + "</select>";
        //var selectItem = document.getElementById("comboModelProductGroup");

        var comboProductGroupUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 10;

        $.ajax({
            url: comboProductGroupUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function(data) {
                data.forEach(element => {
                    dataListProductGroup.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    document.getElementById("modelProductGroupId").appendChild(option);
                });
            }
        });
    }

    function ComboModelRowProductGroupList(productGroupId, count) {

        document.getElementById("modelRowProductGroup'" + count + "'").innerHTML = "<select id=\"comboModelRowProductGroup" + count + "\" class=\"form-control productGroup comboModelRowProductGroup\" name=\"comboModelRowProductGroup\" disabled=\"disabled\">" + "</select>";
        var selectItem = document.getElementById("comboModelRowProductGroup" + count);


        dataListProductGroup.forEach(element => {

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectItem.appendChild(option);
                });

        if (productGroupId > 0) {
            selectItem.value = productGroupId;
        }
    }

    function ComboPaymentMethodSeasonCurrencyList(seasonCurrencyId, countSeasonCurrency) {
        dataListSeasonCurrency = [];

        document.getElementById("seasonCurrency'" + countSeasonCurrency + "'").innerHTML = "<select id=\"comboSeasonCurrency" + countSeasonCurrency + "\" class=\"form-control seasonCurrency comboSeasonCurrency\">" + "</select>";
        var selectItem = document.getElementById("comboSeasonCurrency" + countSeasonCurrency);


        var comboSeasonCurrencyUrl = "@Url.Action("ComboListSeasonCurrency", "Season")" + "?seasonId=" + @Model.EntityId;
        $.ajax({
            url: comboSeasonCurrencyUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function(data) {
                data.forEach(element => {
                    dataListSeasonCurrency.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectItem.appendChild(option);

                });
            }
        });

        if (seasonCurrencyId > 0) {
            selectItem.value = seasonCurrencyId;

        }
    }

    function ComboCountryShippingMultiplierCurrencyList(seasonCurrencyId, countSeasonCurrency) {
        dataListSeasonCurrency = [];

        document.getElementById("countrySeasonCurrency'" + countSeasonCurrency + "'").innerHTML = "<select id=\"comboCountrySeasonCurrency" + countSeasonCurrency + "\" class=\"form-control seasonCurrency comboCountrySeasonCurrency\">" + "</select>";
        var selectItemCountry = document.getElementById("comboCountrySeasonCurrency" + countSeasonCurrency);

        var comboSeasonCurrencyUrl = "@Url.Action("ComboListSeasonCurrency", "Season")" + "?seasonId=" + @Model.EntityId;
        $.ajax({
            url: comboSeasonCurrencyUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                data.forEach(element => {
                    dataListSeasonCurrency.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectItemCountry.appendChild(option);
                });
            }
        });

        if (seasonCurrencyId > 0) {
            selectItemCountry.value = seasonCurrencyId;
        }
    }

    function ComboPaymentMethodList(paymentMethodId, countPaymentMethod)
    {
        dataListPaymentMethod = [];

        document.getElementById("paymentMethod'" + countPaymentMethod + "'").innerHTML = "<select id=\"comboPaymentMethod" + countPaymentMethod + "\" class=\"form-control paymentMethod comboPaymentMethod\">" + "</select>";
        var selectitem = document.getElementById("comboPaymentMethod" + countPaymentMethod);

        var comboPaymentMethodUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 36;

        $.ajax({
            url: comboPaymentMethodUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                data.forEach(element => {
                    dataListPaymentMethod.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectitem.appendChild(option);
                });
            }
        });

        if (paymentMethodId > 0) {
            selectitem.value = paymentMethodId;
        }
    }

    function ComboShippingMethodList(shippingMethodId, countCountryShippingMultiplier)
    {
        dataListShippingMethod = [];

        document.getElementById("shippingMethod'" + countCountryShippingMultiplier + "'").innerHTML = "<select id=\"comboShippingMethod" + countCountryShippingMultiplier + "\" class=\"form-control shippingMethod comboShippingMethod\">" + "</select>";
        var selectitem = document.getElementById("comboShippingMethod" + countCountryShippingMultiplier);

        var comboShippingMethodUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 37;

        $.ajax({
            url: comboShippingMethodUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                data.forEach(element => {
                    dataListShippingMethod.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectitem.appendChild(option);
                });
            }
        });

        if (shippingMethodId > 0) {
            selectitem.value = shippingMethodId;
        }
    }

    function ComboCountryList(countryId, countCountryShippingMultiplier)
    {
        dataListCountry = [];

        document.getElementById("country'" + countCountryShippingMultiplier + "'").innerHTML = "<select id=\"comboCountry" + countCountryShippingMultiplier + "\" class=\"form-control country comboCountry\">" + "</select>";
        var selectitem = document.getElementById("comboCountry" + countCountryShippingMultiplier);

        var comboCountryUrl = "@Url.Action("ComboList", "Definition")" + "?value=" + 35;

        $.ajax({
            url: comboCountryUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            success: function (data) {
                data.forEach(element => {
                    dataListCountry.push(element);

                    var option = document.createElement("option");
                    option.textContent = element.text;
                    option.value = element.id;
                    selectitem.appendChild(option);
                });
            }
        });

        if (countryId > 0) {
            selectitem.value = countryId;
        }
    }

    function SeasonPlanningTotalCalc(count) {

        $("#tableSeasonPlanning tbody").each(function () {
            var row = $(this);

            var planOptionMain = row.find("#trPlanLine").find("td").find("input").eq(3).val();
            var planOptionMini = row.find("#trPlanLine").find("td").find("input").eq(4).val();
            var planOptionMidi = row.find("#trPlanLine").find("td").find("input").eq(5).val();
            var planQuantityMain = row.find("#trPlanLine").find("td").find("input").eq(6).val();
            var planQuantityMini = row.find("#trPlanLine").find("td").find("input").eq(7).val();
            var planQuantityMidi = row.find("#trPlanLine").find("td").find("input").eq(8).val();

            var planTotal = ((planOptionMain * planQuantityMain) + (planOptionMini * planQuantityMini) + (planOptionMidi * planQuantityMidi));

            var realOptionMain = row.find("#trRealLine").find("td").find("input").eq(3).val();
            var realOptionMini = row.find("#trRealLine").find("td").find("input").eq(4).val();
            var realOptionMidi = row.find("#trRealLine").find("td").find("input").eq(5).val();
            var realQuantityMain = row.find("#trRealLine").find("td").find("input").eq(6).val();
            var realQuantityMini = row.find("#trRealLine").find("td").find("input").eq(7).val();
            var realQuantityMidi = row.find("#trRealLine").find("td").find("input").eq(8).val();

            var realTotal = (realOptionMain * realQuantityMain + realOptionMini * realQuantityMini + realOptionMidi * realQuantityMidi);


            document.getElementById("trPlanTotalQuantity" + "\'" + count + "\'").value = planTotal;
            document.getElementById("planTotalQuantity" + "\'" + count + "\'").value = planTotal;
            document.getElementById("trRealTotalQuantity" + "\'" + count + "\'").value = realTotal;
            document.getElementById("realTotalQuantity" + "\'" + count + "\'").value = realTotal;

            var planUnitQuantity = document.getElementById("trPlanUnitQuantity" + "\'" + count + "\'").value;
            document.getElementById("planUnitQuantity" + "\'" + count + "\'").value = planUnitQuantity;

            var productGroup = document.getElementById("comboProductGroup" + count);
            var productGroupId = productGroup.options[productGroup.selectedIndex].value;

            var topProductGroup = document.getElementById("comboTopProductGroup" + count);
            topProductGroup.options[productGroup.options.selectedIndex].setAttribute("selected", "selected");



        });

    }

    function PaymentMethodCurrencyCalc(count) {

        $("#paymentMethodGrid tbody").each(function () {

            var seasonCurrency = document.getElementById("comboSeasonCurrency" + count);
            var selectSeasonCurrency = seasonCurrency.options[seasonCurrency.selectedIndex].text;

            var centerShare = document.getElementById("centerShare" + "\'" + count + "\'").value;
            var exchangeRate = document.getElementById("exchangeRates" + "\'" + count + "\'").value;
            dataListSeasonCurrency.forEach(element => {

                if (element.text === selectSeasonCurrency) {
                    exchangeRate = element.obj;
                    document.getElementById("exchangeRates" + "\'" + count + "\'").value = exchangeRate;
                }
            });

            var centerShareTl = (centerShare * exchangeRate);

            document.getElementById("centerShareTl" + "\'" + count + "\'").value = centerShareTl;

        });

    }

    function CountryShippingMultiplierCurrencyCalc(count) {

        $("#countryShippingMultiplierGrid tbody").each(function () {

            var seasonCurrency = document.getElementById("comboCountrySeasonCurrency" + count);
            var selectSeasonCurrency = seasonCurrency.options[seasonCurrency.selectedIndex].text;

            var testPrice = document.getElementById("countryTestPrice" + "\'" + count + "\'").value;
            var exchangeRate = document.getElementById("countryExchangeRates" + "\'" + count + "\'").value;
            dataListSeasonCurrency.forEach(element => {

                if (element.text === selectSeasonCurrency) {
                    exchangeRate = element.obj;
                    document.getElementById("countryExchangeRates" + "\'" + count + "\'").value = exchangeRate;
                }
            });

            var testPriceTl = (testPrice * exchangeRate);

            document.getElementById("countryTestPriceTl" + "\'" + count + "\'").value = testPriceTl;

        });

    }

    function AddSeasonPlanning() {
        event.preventDefault();
        var table = document.querySelector("#seasonPlanningGrid");
        table.insertAdjacentHTML("beforeend",
             "<tbody>"
            +"<tr class=\"view\" id=\"view'" + count + "'\" value="+ count + "\>"
            + "<td id=\"topProductGroup'" + count + "'\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"planUnitQuantity'" + count +"'\" name='ListSeasonPlannings[" + count + "].PlanUnitQuantity' class='form-control' disabled=\"disabled\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"planTotalQuantity'" + count +"'\" name='ListSeasonPlannings[" + count + "].PlanTotalQuantity' class='form-control' disabled=\"disabled\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"realTotalQuantity'" + count +"'\" name='ListSeasonPlannings[" + count + "].RealTotalQuantity' class='form-control' disabled=\"disabled\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deleteListLine("+count+")\">@Localizer["Delete"]</button>"
            + "</td>"
            + "</tr>"
            + "<tr class=\"fold open\" id=\"fold'" + count + "'\">"
            + "<td colspan=\"7\">"
            + "<div class=\"fold-content\">"
            + "<table id=\"tableSeasonPlanning\">"
            + "<thead>"
            + "<tr>"
            + "<th width=\"25%\">@Localizer["ProductGroup"]</th>"
            + "<th width=\"25%\">@Localizer["PlanUnitQuantity"]</th>"
            + "<th width=\"25%\">@Localizer["PlanTotalQuantity"]</th>"
            + "<th width=\"25%\">@Localizer["RealTotalQuantity"]</th>"
            + "</tr>"
            + "</thead>"
            + "<tbody>"
            + "<tr id=\"trProductGroup\">"
            + "<td id=\"productGroup'" + count + "'\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"trPlanUnitQuantity'" + count + "'\" name='ListSeasonPlannings[" + count + "].PlanUnitQuantity' class='form-control' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"trPlanTotalQuantity'" + count +"'\" name='ListSeasonPlannings[" + count + "].PlanTotalQuantity' class='form-control' disabled=\"disabled\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type='text' id=\"trRealTotalQuantity'" + count +"'\" name='ListSeasonPlannings[" + count + "].RealTotalQuantity' class='form-control' disabled=\"disabled\">"
            + "</div>"
            + "</td>"
            + "</tr>"
            + "<tr>"
            + "<th width=\"100%\"><strong>@Localizer["Planned"]</strong></th>"
            + "</tr>"
            + "<tr>"
            + "<th width=\"12%\">@Localizer["ModelMain"]</th>"
            + "<th width=\"11%\">@Localizer["ModelMini"]</th>"
            + "<th width=\"11%\">@Localizer["ModelMidi"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMain"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMini"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMidi"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMain"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMini"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMidi"]</th>"
            + "</tr>"
            + "<tr id=\"trPlanLine\">"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanModelMain' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanModelMini' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanModelMidi' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanOptionMain' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanOptionMini' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanOptionMidi' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanQuantityMain' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanQuantityMini' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].PlanQuantityMidi' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "</tr>"
            + "<tr>"
            + "<th width=\"100%\"><strong>@Localizer["Performed"]</strong></th>"
            + "</tr>"
            + "<tr>"
            + "<th width=\"12%\">@Localizer["ModelMain"]</th>"
            + "<th width=\"11%\">@Localizer["ModelMini"]</th>"
            + "<th width=\"11%\">@Localizer["ModelMidi"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMain"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMini"]</th>"
            + "<th width=\"11%\">@Localizer["OptionMidi"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMain"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMini"]</th>"
            + "<th width=\"11%\">@Localizer["QuantityMidi"]</th>"
            + "</tr>"
            + "<tr id=\"trRealLine\">"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealModelMain' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealModelMini' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealModelMidi' class='form-control numericField'>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealOptionMain' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealOptionMini' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealOptionMidi' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealQuantityMain' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealQuantityMini' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class='input-group'>"
            + "<input type='text' name='ListSeasonPlannings[" + count + "].RealQuantityMidi' class='form-control numericField' onkeyup =\"SeasonPlanningTotalCalc(" + count + ");\">"
            + "</div>"
            + "</td>"
            + "</tr>"
            + "</tbody>"
            + "</table>"
            + "</div>"
            + "</td>"
            + "</tr>"
            + "</tbody>"
            );

        tableOpenClosed(count);

        ComboProductGroupList(0, count);

        ComboTopProductGroupList(0, count);
        count++;
    }

    function deleteListLine(rowNo) {
        let rowDocument = document.getElementById("view'" + rowNo + "'");
        rowDocument.remove();

        let foldDocument = document.getElementById("fold'" + rowNo + "'");;
        foldDocument.remove();
    }


    function AddSeasonCurrency() {
        event.preventDefault();
        var table = document.querySelector("#seasonCurrencyGrid");
        table.insertAdjacentHTML("beforeend",
            "<tbody>"
            + "<tr id=\"trSeasonCurrency\">"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<div class=\"checkbox-custom checkbox-inline checkbox-success\" style=\"padding-top:5px\">"
             + "<input type=\"checkbox\" class=\"isDefaultCheck\" name=\"ListSeasonCurrencies[" + countSeasonCurrency + "].IsDefault\">"
            + "<label></label>"
            + "</div>"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
             + "<input type=\"text\" class=\"form-control\" id=\"currencyType\" name=\"ListSeasonCurrencies[" + countSeasonCurrency + "].CurrencyType\">"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
             + "<input type=\"text\" class=\"form-control numericField\" id=\"exchangeRate\" name=\"ListSeasonCurrencies[" + countSeasonCurrency + "].ExchangeRate\">"
            + "</div>"
            + "</td>"
            + "<td><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deleteSeasonCurrency(this)\">@Localizer["Delete"]</button>"
             + "<input type=\"hidden\" class=\"form-control\" name=\"ListSeasonCurrencies[" + countSeasonCurrency + "].Id\">"
            + "</td>"
            + "</tr>"
            + "</tbody>"
        );
        countSeasonCurrency++;
    }

    function deleteSeasonCurrency(button) {
        button.closest("tr").remove();
    }

    function AddPaymentMethodShare() {
        event.preventDefault();
        var table = document.querySelector("#paymentMethodGrid");
        table.insertAdjacentHTML("beforeend",
            "<tbody>"
            + "<tr id=\"trPaymentMethod\">"
            + "<td id=\"paymentMethod'" + countPaymentMethod + "'\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"centerShare'" + countPaymentMethod + "'\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].CenterShare\" onchange = \"PaymentMethodCurrencyCalc(" + countPaymentMethod + ");\"/>"
            + "</div>"
            + "</td>"
            + "<td id=\"seasonCurrency'" + countPaymentMethod + "'\" onchange = \"PaymentMethodCurrencyCalc(" + countPaymentMethod + ");\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"exchangeRates'" + countPaymentMethod + "'\" disabled=\"disabled\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].ExchangeRates\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"centerShareTl'" + countPaymentMethod +"'\" disabled=\"disabled\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].CenterShareTl\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"centerShareEuro\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].CenterShareEuro\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"accessoryCenterShareEuro\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].AccessoryCenterShareEuro\" />"
            + "</div>"
            + "</td>"
            + "<td><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deletePaymentMethodShare(this)\">@Localizer["Delete"]</button>"
            + "<input type=\"hidden\" class=\"form-control\" name=\"ListPaymentMethodShares[" + countPaymentMethod + "].Id\">"
            + "</td>"
            + "</tr>"
            + "</tbody>"
        );

        ComboPaymentMethodList(0, countPaymentMethod);
        ComboPaymentMethodSeasonCurrencyList(0, countPaymentMethod);
        countPaymentMethod++;
    }

    function deletePaymentMethodShare(button) {
        button.closest("tr").remove();
    }

    function AddCountryShippingMultiplier() {
        event.preventDefault();
        var table = document.querySelector("#countryShippingMultiplierGrid tbody");
        table.insertAdjacentHTML("beforeend",
            "<tr class=\"dataSatir\">"
            + "<td id=\"country'" + countCountryShippingMultiplier + "'\">"
            + "</td>"
            + "<td id=\"shippingMethod'" + countCountryShippingMultiplier + "'\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"multiplier\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].Multiplier\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"countryTestPrice'" + countCountryShippingMultiplier + "'\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].TestPrice\" , onchange = \"CountryShippingMultiplierCurrencyCalc(" + countCountryShippingMultiplier + ");\" />"
            + "</div>"
            + "</td>"
            + "<td id=\"countrySeasonCurrency'" + countCountryShippingMultiplier + "'\", onchange = \"CountryShippingMultiplierCurrencyCalc(" + countCountryShippingMultiplier + ");\">"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"countryExchangeRates'" + countCountryShippingMultiplier + "'\" disabled=\"disabled\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].ExchangeRates\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"countryTestPriceTl'" + countCountryShippingMultiplier + "'\" disabled=\"disabled\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].TestPriceTl\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"testPercentage\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].TestPercentage\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"cargoPercentage\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].CargoPercentage\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"insurancePercentage\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].InsurancePercentage\" />"
            + "</div>"
            + "</td>"
            + "<td>"
            + "<div class=\"input-group\">"
            + "<input type=\"text\" class=\"form-control numericField\" id=\"freightPercentage\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].FreightPercentage\" />"
            + "</div>"
            + "</td>"
            + "<td><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deleteCountryShippingMultiplier(this)\">@Localizer["Delete"]</button>"
            + "<input type=\"hidden\" class=\"form-control\" name=\"ListCountryShippingMultipliers[" + countCountryShippingMultiplier + "].Id\">"
            + "</td>"
            + "</tr>"
        );
        ComboCountryList(0, countCountryShippingMultiplier);
        ComboShippingMethodList(0, countCountryShippingMultiplier);
        ComboCountryShippingMultiplierCurrencyList(0, countCountryShippingMultiplier);

        countCountryShippingMultiplier++;
    }

    function deleteCountryShippingMultiplier(button) {
        button.closest("tr").remove();
    }

    function AddModelSeasonRowNumbersAllProductGroup() {

        SortModelSeasonRowNumbers();
        var trFirstModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length;
        var maxNumber = document.getElementById("modelRowNumber").value;
        var trModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length;

        dataListProductGroup.forEach(element => {
            var productGroupId = element.id;

            event.preventDefault();
            var table = document.querySelector("#modelSeasonRowNumbersGrid tbody");

            for (var i = 1; i <= maxNumber; i++) {
                trModelSeasonRowNumbers = trModelSeasonRowNumbers + 1;

                var used = 0;

                $("#modelSeasonRowNumbersGrid tbody").each(function () {

                    var tableModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length + 1;
                    for (var j = 1; j < tableModelSeasonRowNumbers; j++) {
                        var rowProductGroup = 0;
                        var rowProductGroupId = 0;
                        var rowNumber = 0;
                        if (!document.getElementById("modelRowNumber'" + j + "'") && !document.getElementById("comboModelRowProductGroup" + j)) {
                            j++;
                        } else {
                            rowProductGroup = document.getElementById("comboModelRowProductGroup" + j);
                            rowProductGroupId = rowProductGroup.options[rowProductGroup.selectedIndex].value;
                            rowNumber = document.getElementById("modelRowNumber'" + j + "'").value;
                        }


                        if (rowProductGroupId == productGroupId && rowNumber == i) {
                            used = 1;

                        }

                        if (productGroupId == rowProductGroupId && maxNumber < i) {
                            used = 1;

                        }
                        if (productGroupId !== rowProductGroupId) {
                            trFirstModelSeasonRowNumbers = 0;
                        }
                        if (productGroupId == rowProductGroupId && i == trFirstModelSeasonRowNumbers) {
                            used = 1;

                        }

                    }
                });

                if (used !== 1) {
                    table.insertAdjacentHTML("beforeend",
                        "<tr class=\"trModelSeasonRowNumbers\">"
                        + "<td>"
                        + "<div class=\"input-group\">"
                        + "<div class=\"checkbox-custom checkbox-inline checkbox-success\" style=\"padding-top:5px\">"
                        + "<input type=\"checkbox\" class=\"isActiveCheck\" name=\"ListModelSeasonRowNumbers[" + trModelSeasonRowNumbers + "].IsActive\" checked=\"checked\">"
                        + "<label></label>"
                        + "</div>"
                        + "</td>"
                        + "<td id=\"modelRowProductGroup'" + trModelSeasonRowNumbers + "'\" disabled=\"disabled\">"
                        + "</td>"
                        + "<td>"
                        + "<div class=\"input-group\">"
                        + "<input type=\"number\" class=\"form-control numericField\" id=\"modelRowNumber'" + trModelSeasonRowNumbers + "'\" name=\"modelRowNumber\"  value=" + i + " disabled=\"disabled\" />"
                        + "</div>"
                        + "</td>"
                        + "<td><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deleteModelSeasonRowNumbers(this)\">@Localizer["Delete"]</button>"
                        + "<input type=\"hidden\" class=\"form-control\" name=\"ListModelSeasonRowNumbers[" + trModelSeasonRowNumbers + "].Id\">"
                        + "</td>"
                        + "</tr>"
                    );

                    ComboModelRowProductGroupList(productGroupId, trModelSeasonRowNumbers);

                }
            }

        });
        SortModelSeasonRowNumbers();


    }

    function AddModelSeasonRowNumbersByProductGroupId() {

        SortModelSeasonRowNumbers();

        var productGroup = document.getElementById("modelProductGroupId");
        var productGroupId = productGroup.options[productGroup.selectedIndex].value;

        var maxNumber = document.getElementById("modelRowNumber").value;
        var trModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length;

        var trFirstModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length;
        event.preventDefault();
        var table = document.querySelector("#modelSeasonRowNumbersGrid tbody");

        for (var i = 1; i <= maxNumber; i++) {
            trModelSeasonRowNumbers = trModelSeasonRowNumbers + 1;

            var used = 0;

            $("#modelSeasonRowNumbersGrid tbody").each(function () {

                var tableModelSeasonRowNumbers = $('.trModelSeasonRowNumbers').length+1;
                for (var j = 1; j < tableModelSeasonRowNumbers; j++) {
                    var rowProductGroup=0;
                    var rowProductGroupId=0;
                    var rowNumber=0;
                    if (!document.getElementById("modelRowNumber'" + j + "'") && !document.getElementById("comboModelRowProductGroup" + j)) {
                        j++;
                    } else {
                        rowProductGroup = document.getElementById("comboModelRowProductGroup" + j);
                        rowProductGroupId = rowProductGroup.options[rowProductGroup.selectedIndex].value;
                        rowNumber = document.getElementById("modelRowNumber'" + j + "'").value;
                    }


                    if (rowProductGroupId == productGroupId && rowNumber == i) {
                        used = 1;

                    }

                    if (productGroupId == rowProductGroupId && maxNumber < i) {
                        used = 1;

                    }
                    if (productGroupId !== rowProductGroupId) {
                        trFirstModelSeasonRowNumbers = 0;
                    }
                    if (productGroupId == rowProductGroupId && i == trFirstModelSeasonRowNumbers) {
                        used = 1;

                    }

                }
            });

            if (used !== 1) {
                table.insertAdjacentHTML("beforeend",
                    "<tr class=\"trModelSeasonRowNumbers\">"
                    + "<td>"
                    + "<div class=\"input-group\">"
                    + "<div class=\"checkbox-custom checkbox-inline checkbox-success\" style=\"padding-top:5px\">"
                    + "<input type=\"checkbox\" class=\"isActiveCheck\" name=\"ListModelSeasonRowNumbers[" + trModelSeasonRowNumbers + "].IsActive\" checked=\"checked\">"
                    + "<label></label>"
                    + "</div>"
                    + "</td>"
                    + "<td id=\"modelRowProductGroup'" + trModelSeasonRowNumbers + "'\" disabled=\"disabled\">"
                    + "</td>"
                    + "<td>"
                    + "<div class=\"input-group\">"
                    + "<input type=\"number\" class=\"form-control numericField\" id=\"modelRowNumber'" + trModelSeasonRowNumbers + "'\" name=\"modelRowNumber\"  value=" + i +" disabled=\"disabled\" />"
                    + "</div>"
                    + "</td>"
                    + "<td><button type=\"button\" class=\"btn btn-sm btn-outline-danger\" onclick=\"deleteModelSeasonRowNumbers(this)\">@Localizer["Delete"]</button>"
                    + "<input type=\"hidden\" class=\"form-control\" name=\"ListModelSeasonRowNumbers[" + trModelSeasonRowNumbers + "].Id\">"
                    + "</td>"
                    + "</tr>"
                );

                ComboModelRowProductGroupList(productGroupId, trModelSeasonRowNumbers);

            }
        }

        SortModelSeasonRowNumbers();


    }

    function SortModelSeasonRowNumbers() {

        var table, rows, switching, switching2, i, iPlus, x, y, j,jPlus, a, b, shouldSwitch, shouldSwitch2;
        table = document.getElementById("modelSeasonRowNumbersGrid");

        switching = true;
        switching2 = true;


        while (switching2) {

            switching2 = false;
            rows = table.rows;

            for (j = 1; j < (rows.length - 1); j++) {
                jPlus = j + 1;
                shouldSwitch2 = false;

                a = rows[j].getElementsByTagName("TD")[2].getElementsByTagName("div")[0].getElementsByTagName("input")[0].value;
                b = rows[jPlus].getElementsByTagName("TD")[2].getElementsByTagName("div")[0].getElementsByTagName("input")[0].value;

                if (a.toLowerCase() > b.toLowerCase()) {

                    shouldSwitch2 = true;
                    break;
                }
            }
            if (shouldSwitch2) {
                rows[j].parentNode.insertBefore(rows[jPlus], rows[j]);
                switching2 = true;

            }
        }

        while (switching) {
            rows = table.rows;
           switching = false;
           for (i = 1; i < (rows.length - 1); i++) {
                iPlus = i + 1;
                shouldSwitch = false;

                x = rows[i].getElementsByTagName("TD")[1].getElementsByTagName("select")[0];
                x = x.options[x.selectedIndex];

                y = rows[iPlus].getElementsByTagName("TD")[1].getElementsByTagName("select")[0];
                y = y.options[y.selectedIndex];

                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[iPlus], rows[i]);
                switching = true;
            }
        }

        for (var k = 1; k < (rows.length); k++) {
            rows[k].getElementsByTagName("TD")[0].getElementsByTagName("div")[0].getElementsByTagName("div")[0].getElementsByTagName("input")[0].name = "ListModelSeasonRowNumbers[" + k + "].IsActive";
            rows[k].getElementsByTagName("TD")[1].id = "modelRowProductGroup'" + k + "'";
            rows[k].getElementsByTagName("TD")[1].getElementsByTagName("select")[0].id = "comboModelRowProductGroup" + k;
            rows[k].getElementsByTagName("TD")[2].getElementsByTagName("div")[0].getElementsByTagName("input")[0].id = "modelRowNumber'" + k + "'";
            //rows[k].getElementsByTagName("TD")[2].getElementsByTagName("div")[0].getElementsByTagName("input")[0].value =  k ;
            rows[k].getElementsByTagName("TD")[3].getElementsByTagName("input")[0].name = "ListModelSeasonRowNumbers[" + k + "].Id";

        }

    }

    function deleteModelSeasonRowNumbers(button) {
        button.closest("tr").remove();
    }

    var newID = 0;
    function Save() {

        var dataListSeasonPlanning = [];
        var dataListSeasonCurrency = [];
        var dataListPaymentMethodShare = [];
        var dataListCountryShippingMultiplier = [];
        var dataListModelSeasonRowNumber = [];


        $("#tableSeasonPlanning tbody").each(function () {
            var row = $(this);

            var data = {};

            data.productGroupId = row.find("#trProductGroup").find("td").find("select").eq(0).val();
            data.planUnitQuantity = row.find("#trProductGroup").find("td").find("input").eq(0).val();
            data.planTotalQuantity = row.find("#trProductGroup").find("td").find("input").eq(1).val();
            data.realTotalQuantity = row.find("#trProductGroup").find("td").find("input").eq(2).val();

            data.planModelMain = row.find("#trPlanLine").find("td").find("input").eq(0).val();
            data.planModelMini = row.find("#trPlanLine").find("td").find("input").eq(1).val();
            data.planModelMidi = row.find("#trPlanLine").find("td").find("input").eq(2).val();
            data.planOptionMain = row.find("#trPlanLine").find("td").find("input").eq(3).val();
            data.planOptionMini = row.find("#trPlanLine").find("td").find("input").eq(4).val();
            data.planOptionMidi = row.find("#trPlanLine").find("td").find("input").eq(5).val();
            data.planQuantityMain = row.find("#trPlanLine").find("td").find("input").eq(6).val();
            data.planQuantityMini = row.find("#trPlanLine").find("td").find("input").eq(7).val();
            data.planQuantityMidi = row.find("#trPlanLine").find("td").find("input").eq(8).val();

            data.realModelMain = row.find("#trRealLine").find("td").find("input").eq(0).val();
            data.realModelMini = row.find("#trRealLine").find("td").find("input").eq(1).val();
            data.realModelMidi = row.find("#trRealLine").find("td").find("input").eq(2).val();
            data.realOptionMain = row.find("#trRealLine").find("td").find("input").eq(3).val();
            data.realOptionMini = row.find("#trRealLine").find("td").find("input").eq(4).val();
            data.realOptionMidi = row.find("#trRealLine").find("td").find("input").eq(5).val();
            data.realQuantityMain = row.find("#trRealLine").find("td").find("input").eq(6).val();
            data.realQuantityMini = row.find("#trRealLine").find("td").find("input").eq(7).val();
            data.realQuantityMidi = row.find("#trRealLine").find("td").find("input").eq(8).val();

            dataListSeasonPlanning.push(data);
        });

        $("#seasonCurrencyGrid tbody").each(function () {
            var row = $(this);

            var data = {};
            if (row.find(".isDefaultCheck").is(":checked")) {
                data.isDefault = true;
            } else {
                data.isDefault = false;
            }
            data.currencyType = row.find("#trSeasonCurrency").find("td").find("input").eq(1).val();
            data.exchangeRate = row.find("#trSeasonCurrency").find("td").find("input").eq(2).val();
            data.seasonCurrencyId = row.find("#trSeasonCurrency").find("td").find("input").eq(3).val();




            dataListSeasonCurrency.push(data);
        });

        $("#paymentMethodGrid tbody").each(function () {
            var row = $(this);

            var data = {};

            data.paymentMethodId = row.find("#trPaymentMethod").find("td").find("select").eq(0).val();
            data.centerShare = row.find("#trPaymentMethod").find("td").find("input").eq(0).val();
            data.seasonCurrencyId = row.find("#trPaymentMethod").find("td").find("select").eq(1).val();
            data.exchangeRate = row.find("#trPaymentMethod").find("td").find("input").eq(1).val();
            data.centerShareTl = row.find("#trPaymentMethod").find("td").find("input").eq(2).val();
            data.centerShareEuro = row.find("#trPaymentMethod").find("td").find("input").eq(3).val();
            data.accessoryCenterShareEuro = row.find("#trPaymentMethod").find("td").find("input").eq(4).val();
            data.paymentMethodShareId = row.find("#trPaymentMethod").find("td").find("input").eq(5).val();

            dataListPaymentMethodShare.push(data);
        });

        $("#countryShippingMultiplierGrid tbody").each(function () {
            var row = $(this);

            var data = {};

            data.countryId = row.find("#dataSatir").find("td").find("select").eq(0).val();
            data.shippingMethodId = row.find("#dataSatir").find("td").find("select").eq(1).val();
            data.multiplier = row.find("#dataSatir").find("td").find("input").eq(0).val();
            data.testPrice = row.find("#dataSatir").find("td").find("input").eq(1).val();
            data.seasonCurrencyId = row.find("#dataSatir").find("td").find("select").eq(2).val();
            data.exchangeRate = row.find("#dataSatir").find("td").find("input").eq(2).val();
            data.testPriceTl = row.find("#dataSatir").find("td").find("input").eq(3).val();
            data.testPercentage = row.find("#dataSatir").find("td").find("input").eq(4).val();
            data.cargoPercentage = row.find("#dataSatir").find("td").find("input").eq(5).val();
            data.insurancePercentage = row.find("#dataSatir").find("td").find("input").eq(6).val();
            data.freightPercentage = row.find("#dataSatir").find("td").find("input").eq(7).val();
            data.countryShippingMultiplierId = row.find("#dataSatir").find("td").find("input").eq(8).val();

            dataListCountryShippingMultiplier.push(data);
        });

        $("#modelSeasonRowNumbersGrid tbody").each(function () {
            var row = $(this);

            var data = {};

            if (row.find(".isActiveCheck").is(":checked")) {
                data.isActive = true;
            } else {
                data.isActive = false;
            }
            data.productGroupId = row.find("#trModelSeasonRowNumbers").find("td").find("select").eq(0).val();
            data.rowNumber = row.find("#trModelSeasonRowNumbers").find("td").find("input").eq(0).val();
            data.modelSeasonRowNumberId = row.find("#trModelSeasonRowNumbers").find("td").find("input").eq(1).val();

            dataListModelSeasonRowNumber.push(data);
        });

        $('#SubSeasonPlanningString').val(JSON.stringify(dataListSeasonPlanning));
        $('#SubSeasonCurrencyString').val(JSON.stringify(dataListSeasonCurrency));
        $('#SubPaymentMethodShareString').val(JSON.stringify(dataListPaymentMethodShare));
        $('#SubCountryShippingMultiplierString').val(JSON.stringify(dataListCountryShippingMultiplier));
        $('#SubModelSeasonRowNumberString').val(JSON.stringify(dataListModelSeasonRowNumber));

        var url = "@Url.Action("Save", "Season")";
        $.post(url,
            $("form").serialize(), function (data) {
                if (data.result == false) {
                    ShowError('@SharedLocaLizer.GetLocalizedHtmlString("ErrorTitle")', data.message);
                    $('#SubSeasonPlanningString').val(dataListSeasonPlanning);
                    $('#SubSeasonCurrencyString').val(dataListSeasonCurrency);
                    $('#SubPaymentMethodShareString').val(dataListPaymentMethodShare);
                    $('#SubCountryShippingMultiplierString').val(dataListCountryShippingMultiplier);
                    $('#SubModelSeasonRowNumberString').val(dataListModelSeasonRowNumber);
                }
                if (data.result == true) {
                    newID = data.obj;
                    ShowSuccess('@SharedLocaLizer.GetLocalizedHtmlString("SaveMessage")');
                }
            });

    }

    function tableOpenClosed(Count) {
        document.getElementById("view'" + Count + "'").onclick = function(){
            if (document.getElementById("view'" + Count + "'").classList.contains("open")) {
                document.getElementById("view'" + Count + "'").classList.remove("open");
                document.getElementById("fold'" + Count + "'").classList.remove("open");
            } else {
                document.getElementById("view'" + Count + "'").classList.add("open");
                document.getElementById("fold'" + Count + "'").classList.add("open");
            }

        }

    }

    function ShowError(title, message) {
        Swal.fire({
            position: 'top-end',
            title: title,
            text: message,
            icon: 'error',
            showCloseButton: true,
            showConfirmButton: true,
            padding: '4em'
        });
    }

    function ShowSuccess(title, message) {

        Swal.fire({
            position: 'top-end',
            title: title,
            text: message,
            icon: 'success',
            showCloseButton: true,
            showConfirmButton: true,
            padding: '4em'
        }).then(function () {
            window.location.href = "@Url.Action("Detail","Season")" + "?Detail=" + id;;
        });
    }
</script>