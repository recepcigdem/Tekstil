<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthorizationDenied" xml:space="preserve">
    <value>Authorization denied!</value>
  </data>
  <data name="CenterShareEuroMustBeGreaterThanZero" xml:space="preserve">
    <value>Center share euro must be greater than zero!</value>
  </data>
  <data name="CenterShareMustBeGreaterThanZero" xml:space="preserve">
    <value>Center share must be greater than zero!</value>
  </data>
  <data name="CodeAlreadyExists" xml:space="preserve">
    <value>Code already exists!</value>
  </data>
  <data name="CodeNotEmpty" xml:space="preserve">
    <value>Code is not empty!</value>
  </data>
  <data name="CountryNotEmpty" xml:space="preserve">
    <value>Country is not empty!</value>
  </data>
  <data name="CountryShippingMultiplierDescriptionAlreadyExists" xml:space="preserve">
    <value>Country shipping multiplier already exists!</value>
  </data>
  <data name="CountryShippingMultiplierNotDeleted" xml:space="preserve">
    <value>Country shipping multiplier is not deleted!</value>
  </data>
  <data name="CountryShippingMultiplierNotFound" xml:space="preserve">
    <value>Country shipping multiplier is not found!</value>
  </data>
  <data name="CurrencyTypeNotEmpty" xml:space="preserve">
    <value>Currency type is not empty!</value>
  </data>
  <data name="DescriptionAlreadyExists" xml:space="preserve">
    <value>Description already exists!</value>
  </data>
  <data name="DescriptionNotEmpty" xml:space="preserve">
    <value>Description is not empty!</value>
  </data>
  <data name="Error_SystemError" xml:space="preserve">
    <value>System error!</value>
  </data>
  <data name="ExchangeRateMustBeGreaterThanZero" xml:space="preserve">
    <value>Exchange rate must be greater than zero!</value>
  </data>
  <data name="Message_SeasonCurrencyIsUsedCountryShippingMultiplier" xml:space="preserve">
    <value>Season currency is used country shipping multiplier!</value>
  </data>
  <data name="Message_SeasonCurrencyIsUsedPaymentMethodShare" xml:space="preserve">
    <value>Season currency is used payment method share!</value>
  </data>
  <data name="Message_SeasonCurrencyIsUsedTariffNoDetail" xml:space="preserve">
    <value>Season currency is used tariff no detail!</value>
  </data>
  <data name="Message_SeasonIsUsedInCsNoDeliveryDate" xml:space="preserve">
    <value>Season is used in cs no delivery date!</value>
  </data>
  <data name="Message_SeasonIsUsedInTariffNoDetail" xml:space="preserve">
    <value>Season is used in tariff no detail!</value>
  </data>
  <data name="ModelSeasonRowNumberNotDeleted" xml:space="preserve">
    <value>Model season row number is not deleted!</value>
  </data>
  <data name="ModelSeasonRowNumberNotFound" xml:space="preserve">
    <value>Model season row number is not found!</value>
  </data>
  <data name="MultiplierMustBeGreaterThanZero" xml:space="preserve">
    <value>Multiplier must be greater than zero!</value>
  </data>
  <data name="PaymentMethodAlreadyExists" xml:space="preserve">
    <value>Payment method already exists!</value>
  </data>
  <data name="PaymentMethodNotEmpty" xml:space="preserve">
    <value>Payment method is not empty!</value>
  </data>
  <data name="PaymentMethodShareNotDeleted" xml:space="preserve">
    <value>Payment method share is not deleted!</value>
  </data>
  <data name="PaymentMethodShareNotFound" xml:space="preserve">
    <value>Payment method is not found!</value>
  </data>
  <data name="ProductGroupNotEmpty" xml:space="preserve">
    <value>Product group is not empty!</value>
  </data>
  <data name="ProductNotEmpty" xml:space="preserve">
    <value>Product is not empty!</value>
  </data>
  <data name="RowNumberMustBeGreaterThanZero" xml:space="preserve">
    <value>Exchange rate must be greater than zero!</value>
  </data>
  <data name="SeasonCurrencyCurrencyTypeAlreadyExists" xml:space="preserve">
    <value>Season currency-&gt;currency type already exists!</value>
  </data>
  <data name="SeasonCurrencyNotDeleted" xml:space="preserve">
    <value>Season currency is not deleted!</value>
  </data>
  <data name="SeasonCurrencyNotEmpty" xml:space="preserve">
    <value>Season currency is not empty!</value>
  </data>
  <data name="SeasonCurrencyNotFound" xml:space="preserve">
    <value>Season currency is not found!</value>
  </data>
  <data name="SeasonNotEmpty" xml:space="preserve">
    <value>Season is not empty!</value>
  </data>
  <data name="SeasonPlaningDescriptionAlreadyExists" xml:space="preserve">
    <value>Season planing -&gt;description already exists!</value>
  </data>
  <data name="SeasonPlanningNotDeleted" xml:space="preserve">
    <value>Season planning is not deleted!</value>
  </data>
  <data name="SeasonPlanningNotFound" xml:space="preserve">
    <value>Season planning is not found!</value>
  </data>
  <data name="ShippingMethodNotEmpty" xml:space="preserve">
    <value>Shipping method is not empty!</value>
  </data>
  <data name="TestPriceMustBeGreaterThanZero" xml:space="preserve">
    <value>Test price must be greater than zero!</value>
  </data>
</root>